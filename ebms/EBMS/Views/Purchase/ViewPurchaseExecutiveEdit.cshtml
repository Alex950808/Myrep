@model EBMS.Models.T_PurchaseExecutive
@using Lib
@{
    ViewBag.Title = "ViewPurchaseEdit";
    Layout = "~/Views/Shared/_Main_Edit.cshtml";
}
<script type="text/javascript">
    var grid; //定义全局变量datagrid
    var editRow = -1;
    //加载数据
    $(function () {
        var code = "@ViewData["Code"]";
  
        var adminID = "@ViewData["adminId"]";
        $("#ApproveFirst").val(adminID);
        //创建一个新的Grid
        grid = $('#List').datagrid({
            width: $(window).width() - 10,
            height: $(window).height() - 250,
            fitColumns: true,
            showFooter: true,
            singleSelect: true,//单选模式
            rownumbers: false,//行号
            columns: [[
                      {
                          field: 'ProductName', title: '产品名称', width: 100, editor: {
                              type: 'text', options: { required: true }
                          }
                      },
                {
                    field: 'PlanNum', title: '数量', width: 80, editor: {
                        type: 'text', options: { required: true }
                    }
                },
                 {
                     field: 'Specifications', title: '规格', width: 80, editor: {
                         type: 'text', options: { required: true }
                     }

                 },
                 {
                     field: 'RequirementDate', title: '要求到货时间', align: 'center', width: 120, editor: {
                         type: 'datebox', options: { required: true }
                     }
                 },
                    {
                        field: 'action', title: '操作', width: 120, align: 'center', formatter: function (value, row, index) {
                            return '<div class="btn-bar"><a onclick="addRow()"  class="icon-add" >添加</a><a onclick="removeRow(' + index + ')" class="icon-remove">删除</a></div>';
                        }
                    },
            ]],
            onClickCell: function (index, field) {
                if (field != 'action') {
                    editCell(index, field);
                }
            },
            onAfterEdit: function (index) {
                grid.datagrid('refreshRow', index);
                updateFooter()
                saveJson();
            }
        });
        grid.datagrid('loadData', { total: 0, rows: [], "footer": [{ "Unit": "合计", "UnitPrice": 0.00, "Qty": 0 }] });
        var PurchaseId = "@ViewData["ID"]";
        function fLoadData() {
            $.ajax({
                type: "POST",
                url: "EditExecutiveEditGetDetail?ID=" + PurchaseId,
                success: function (data) {
                    var vData = $.parseJSON(data);
                    grid.datagrid('loadData', vData); //将数据绑定到datagrid   
                    saveJson();
                    updateFooter();
                }
            });
        }
        fLoadData()
        $(window).resize(function () {
            $('#List').datagrid('resize', {
                width: $(window).width() - 10,
                height: $(window).height() - 191
            })
        });
        //提交后台方法
        var sign = 0;
        $("#btnSave").click(function () {

            loading(0);
            grid.datagrid("endEdit", editRow);
            grid.datagrid('clearSelections');
            var rows = $('#List').datagrid("getRows");
            if (rows == "") {
                $.messager.alert('提示', "请添加采购详情", "info")
                loading(1);
                return
            }
            //循环验证数据
            for (var i = 0; i < rows.length; i++) {

                if (rows[i].ProductName == undefined || rows[i].ProductName == "") {
                    $.messager.alert('提示', "产品名称不能为空", "info")
                    loading(1);
                    return false;
                }
                if (rows[i].ProductName == undefined || rows[i].PlanNum == "") {
                    $.messager.alert('提示', "数量不允许为空", "info")
                    loading(1);
                    return false;
                }

                if (rows[i].RequirementDate == undefined || rows[i].RequirementDate == "") {
                    $.messager.alert('提示', "要求到货时间不能为空", "info")
                    loading(1);
                    return false;
                }

            }
            if ($("#EditForm").valid()) {
                if (sign == 0) {
                    sign = 1;
                    $.ajax({
                        url: "ViewPurchaseExecutiveEditSave?detailList=" + $("#jsonStr").val(),
                        type: "Post",
                        data: $("#EditForm").serialize(),
                        success: function (data) {
                            if (data.State == "Success") {
                                loading(1);
                                $.messager.alert('提示', '保存成功', "info", function () {
                                    window.location.reload();
                                    sign = 0
                                });
                            } else {
                                loading(1);
                                $.messager.alert('提示', data.Message, "info", function () {
                                    $("#List").datagrid("reload");
                                    sign = 0
                                });
                            }
                        }
                    });
                }
            }
        });
    });
    //添加一行空的数据
    function addRow() {
        $('#List').datagrid('appendRow', {
            ProductName: "",
            PlanNum: "",
            Specifications: "",
            RequirementDate: "",
        })
    }
    //删除某一行数据
    function removeRow(index) {
        editCell(index, "Qty")
        var rows = $('#List').datagrid("getRows");
        $('#List').datagrid('deleteRow', index);
        $('#List').datagrid("loadData", rows);
        saveJson();
        updateFooter()
    }
    //底部统计
    function updateFooter() {
        var billCount = 0;
        var Total = 0;
        var rows = grid.datagrid('getRows');
        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            if (row.Qty) {
                billCount += parseInt(row.Qty);

            }
            if (row.UnitPrice) {
                Total += parseFloat(row.UnitPrice)
            }
        }
        grid.datagrid('reloadFooter', [{ "Unit": "合计", "UnitPrice": Total.toFixed(2), "Qty": billCount }]);
    }
    //序列化数据
    function saveJson() {
        JsonText = "[";
        var rows = $('#List').datagrid('getRows');
        for (var i = 0; i < rows.length; i++) {
            JsonText += '{';
            JsonText += '"ProductName":' + '"' + rows[i].ProductName + '",';
            JsonText += '"PlanNum":' + '"' + rows[i].PlanNum + '",';
            JsonText += '"Specifications":' + '"' + rows[i].Specifications + '",';
            JsonText += '"RequirementDate":' + '"' + rows[i].RequirementDate + '"},';
        }
        JsonText = JsonText.substring(0, JsonText.length - 1);
        JsonText += "]";
        $("#jsonStr").val(JsonText);
    }
    //编辑触发的方法
    function editCell(index, field) {
        grid.datagrid('endEdit', editRow);
        editRow = index;
        grid.datagrid('selectRow', index);
        grid.datagrid('beginEdit', index);
        var editor = grid.datagrid('getEditor', { index: index, field: field });
        setTimeout(function () {
            editor.target.focus();
        }, 0);

        var editors = grid.datagrid('getEditors', index);
        for (var i = 0; i < editors.length; i++) {
            editors[i].target.bind('keydown', { field: editors[i].field }, function (e) {
                if (e.keyCode == 13) {
                    grid.datagrid('endEdit', index);
                    editRow = -1;;
                } else if (e.keyCode == 38) {	// up

                    if (editRow > 0) {
                        editCell(editRow - 1, e.data.field);
                    }
                } else if (e.keyCode == 40) {	// down

                    if (editRow < grid.datagrid('getRows').length - 1) {
                        editCell(parseInt(editRow) + 1, e.data.field);
                    }
                }
                if (i < 2) {
                    if (!(event.keyCode == 46) && !(event.keyCode == 9) && !(event.keyCode == 8) && !(event.keyCode == 37) && !(event.keyCode == 39))
                        if (!((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)))
                            event.returnValue = false;
                }
            });
        }

    }
    //选择其他地方取消编辑
    $(document).not(grid).on("click", function () {
        grid.datagrid("endEdit", editRow);
        grid.datagrid('unselectAll');
    });

</script>
<div class="mvctool">
    <input id="btnSave" class="modal-btn modal-btn-save" type="submit" value="保存">
     <a href="#" class="easyui-linkbutton" plain="true" iconcls="icon-add" id="BtnAdd" onclick="addRow()">添加商品</a>
  
</div>
@using (Html.BeginForm("EditForm", "Controller", null, FormMethod.Post, new { Id = "EditForm" }))
{
    @Html.ValidationSummary(true)
    <table class="fromEditTable setTextWidth300">
         <tr>
            <td>
                   @Html.HiddenFor(model => model.ID)  
                 @Html.HiddenFor(model => model.Status)  
                @Html.LabelFor(model => model.PurchaseOddNum)：   
            </td>
            <td>
              @Html.TextBoxFor(model => model.PurchaseOddNum, new { @readonly = true })
            </td>
        </tr>
         <tr>
            <td>
                @Html.LabelFor(model => model.ApplyName)：   
            </td>
            <td>
                      @Html.TextBoxFor(model => model.ApplyName, new { @Value = Server.UrlDecode(Request.Cookies["Nickname"].Value), @readonly = true })
            </td>
        </tr>
         <tr>
            <td>
                @Html.LabelFor(model => model.ApplyDepartment)：   
            </td>
            <td>
                  @Html.DropDownListFor(model => model.ApplyDepartment, ViewData["ReportDepartment"] as List<SelectListItem>)
            </td>
        </tr>
         <tr>
            <td>
              @Html.LabelFor(model => model.ApproveFirst)：   
            </td>
            <td>
               @Html.DropDownListFor(model => model.ApproveFirst, ViewData["ApproveFirstList"] as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.ApplyReason)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.ApplyReason)
        </tr>
             <input type="hidden" id="jsonStr" />
    </table>
}
<div class="detail-list">
    <table id="List"></table>
</div>
<div id="openDivNew" class="easyui-dialog" closed="true" modal="true" title="添加详情" style="width: 800px; height: 500px;" resizable="true" closable="true">
    <iframe scrolling="no" id='openIframeNew' frameborder="0" src="" style="width: 100%; height: 98%;"></iframe>
</div>


