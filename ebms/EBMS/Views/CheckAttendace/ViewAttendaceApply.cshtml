@model EBMS.Models.T_CheckAttendace
@{
    ViewBag.Title = "ViewAttendaceApply";
    Layout = "~/Views/Shared/_Main_Layout.cshtml";
}
<script src="/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        $('#zz').hide();
        var sign = 0;
        var date = "@DateTime.Now";
       
        for (var i = 0; i < $(".easyui-datetimebox").length ; i++) {
           
            $(".easyui-datetimebox").eq(i).datetimebox("setValue", date);
            }
        
        $('#btnSave').click(function () {
            if ($("#CurrentApprove").val() == null || $("#CurrentApprove").val() == "")
            {
                $.messager.alert("提示", "请选择审核人", "info")
                return false;
            }
            if ($("#EditForm").valid() && sign == 0) {
                loading(0)
                sign += 1;
                $.ajax({
                    url: "/CheckAttendace/ApplySave",
                    type: "Post",
                    data: $("#EditForm").serialize(),
                    dataType: "json",
                    success: function (data) {
                        loading(1);
                        if (data.State == "Success") {
                          
                            $.messager.alert("提示", "@Lib.MessageRes.SaveOK", "info", function () {
                                window.location.reload();
                            })
                        }
                        else {
                            $.messager.alert("提示", data.Message, "info");
                            sign = 0;
                           
                        }
                    },
                    error: function (data)
                    {
                        sign = 0;
                        loading(1);
                        $.messager.alert("提示", data, "info");
                    }
                });
            }
            return false;

        });
        $('#CurrentApprove').change(function () {
           
            var approvename = $('#CurrentApprove').val();
           
            $("#zz  option").each(function () {
                var thisVal = $(this).val()
                if ($(this).text() == approvename) {
                   
                    $("#Mode").val(thisVal);

                }
           });
            
        })

    })
   
   

</script>
<style>
    .lab {
  width: 110px; 
  text-align: right;}
</style>
<div class="mvctool">
    <a id="btnSave" href="javascript:;" class="modal-btn modal-btn-save">保存</a>
    
</div>

<div>
    @using (Html.BeginForm("EditForm", "Controllers", null, FormMethod.Post, new { Id = "EditForm" }))
    {
    @Html.ValidationSummary(true)
    <table class="fromEditTable setTextWidth300">
       
        <tbody>
             <tr>
              <td class="lab">
                  @Html.LabelFor(model => model.Type):
               </td>
               <td>
                   @Html.TextBoxFor(model => model.Type, new { @readonly = true })
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.Type)
               </td>
              </tr> 
            <tr>
              <td class="lab">
                  @Html.LabelFor(model => model.Reason):
               </td>
               <td>
                   @Html.TextBoxFor(model => model.Reason)
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.Reason)
               </td>
              </tr> 
             @if (ViewData["flag"].ToString() == "2")
             { 
             <tr>
                    <td class="lab">
                 @Html.LabelFor(model => model.LeaveType):
               </td>
                    <td>
                   @Html.DropDownListFor(model => model.LeaveType,ViewData["LeaveTypeList"] as List<SelectListItem>)
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.LeaveType)
               </td>
                </tr>
             }
            <tr>
                @if (ViewData["flag"].ToString() == "1")
                {
              <td class="lab">
                 异常时间：
               </td>
                }
                else
                {
                <td class="lab">
                 @Html.LabelFor(model => model.StartTime):
               </td>
                }
               <td>
                   @Html.TextBoxFor(model => model.StartTime, new { @class="easyui-datetimebox"})@*@type = "datetime-local" *@
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.StartTime)
               </td>
              </tr> 
            
            @if (ViewData["flag"].ToString() == "2" || ViewData["flag"].ToString() == "3")
            { 
                <tr>
                    <td class="lab">
                 @Html.LabelFor(model => model.EndTime):
               </td>
                    <td>
                   @Html.TextBoxFor(model => model.EndTime, new {  @class="easyui-datetimebox" })
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.EndTime)
               </td>
                </tr>
                <tr>
                    <td class="lab">
                 @Html.LabelFor(model => model.Days):
               </td>
                    <td>
                   @Html.TextBoxFor(model => model.Days, new { @type = "tel" })
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.Days)
               </td>
                </tr>
            
            }
            else if (ViewData["flag"].ToString() == "4")
            { 
            <tr>
                    <td class="lab">
                 @Html.LabelFor(model => model.EndTime):
               </td>
                    <td>
                   @Html.TextBoxFor(model => model.EndTime, new { @class="easyui-datetimebox"})
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.EndTime)
               </td>
                </tr>
                <tr>
                    <td class="lab">
                 @Html.LabelFor(model => model.Days):
               </td>
                    <td>
                   @Html.TextBoxFor(model => model.Days, new { @type = "tel" })
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.Days)
               </td>
                </tr>
                
                 <tr>
                    <td class="lab">
                 @Html.LabelFor(model => model.WorkStartTime):
               </td>
                    <td>
                   @Html.TextBoxFor(model => model.WorkStartTime, new {  @class="easyui-datetimebox" })
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.WorkStartTime)
               </td>
                </tr>
                <tr>
                    <td class="lab">
                 @Html.LabelFor(model => model.WorkEndTime):
               </td>
                    <td>
                   @Html.TextBoxFor(model => model.WorkEndTime, new {  @class="easyui-datetimebox"})
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.WorkEndTime)
               </td>
                </tr>
            }
             <tr>
              <td class="lab">
                  @Html.LabelFor(model => model.CurrentApprove):
               </td>
               <td>
                   @Html.DropDownListFor(model => model.CurrentApprove, ViewData["approveList"] as List<SelectListItem>)
               </td>
                  <td>
                   @Html.ValidationMessageFor(model => model.CurrentApprove)
               </td>
              </tr> 
        </tbody>
    </table>
           @Html.HiddenFor(model => model.ID)
         @Html.Hidden("flag");
         @Html.HiddenFor(model=>model.Mode)
        @Html.DropDownList("zz",ViewData["ModeList"] as List<SelectListItem>)

    }

</div>


