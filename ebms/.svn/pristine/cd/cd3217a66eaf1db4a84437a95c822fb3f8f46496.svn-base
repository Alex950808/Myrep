@model EBMS.Models.T_Intercept
@{
    ViewBag.Title = "ViewInterceptApprove";
    Layout = "~/Views/Shared/_Main_Edit.cshtml";
}
<style>
    .red {
        color: red;
    }
    .green {
        color:#2299ee;
    }
</style>
<script type="text/javascript">
    $(function () {

        $.ajax({
            url: 'GetApproveByResons',
            type: 'POST',
            data: JSON.stringify({ reson: "@Model.Reson", step: "@Model.Step" }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                $('select#InterceptNextApprove').empty();
                $.each(data, function (key, value) {
                    $('select#InterceptNextApprove').append(
                        '<option value="' + value.Key + '">'
                        + value.Value +
                        '</option>');
                });
            }
        });

        var url = "GetInterceptDetail?interceptId=" + "@Model.ID";
        $('#List').datagrid({
            url: url,
            width: $(window).width() - 15,
            method: 'post',
            height: $(window).height() * 0.3,
            fitColumns: true,
            sortName: 'ID',
            sortOrder: 'desc',
            idField: 'ID',
            striped: true, //奇偶行是否区分
            singleSelect: true,//单选模式
            rownumbers: false,//行号
            columns: [[
                  { field: 'LoadCode', title: '原产品编码', width: 90, align: 'center' },
                { field: 'LoadName', title: '原产品名称', width: 90, align: 'center' },
                { field: 'LoadNum', title: '原产品数量', width: 50, align: 'center' },
                { field: 'Code', title: '需发产品编码', width: 90, align: 'center' },
                { field: 'Name', title: '需发产品名称', width: 90, align: 'center' },
                { field: 'Num', title: '需发产品数量', width: 50, align: 'center' }
            ]]
        });
        //grid 大小随窗口变化
        $(window).resize(function () {
            $('#List').datagrid('resize', {
                width: $(window).width() - 15,
                height: $(window).height() - 50
            }).datagrid('resize', {
                width: $(window).width() - 15,
                height: $(window).height() - 50
            });
        });

        $("#btnAgree").click(function () {
            $.messager.confirm("操作提示", "您确定要执行操作吗？", function (data) {
                if (data) {
                    post(1);
                }
            });
        });
        $("#btnUnAgree").click(function () {
            $.messager.confirm("操作提示", "您确定要执行操作吗？", function (data) {
                if (data) {
                    post(2);
                }
            });
        });
    });
    var sign = 0;
    function post(status) {
        var memo = $("#Memo").val();
        var para = { "approveID": "@ViewData["approveid"]", "status": status, "memo": memo, "NextApprove": $("#InterceptNextApprove option:selected").val() };
        if (sign == 0) {
            sign++;
            loading(0);
            $.ajax({
                url: "Check",
                type: "Post",
                data: para,
                success: function (data) {
                    loading(1);
                    if (data.State == "Success") {
                        $.messager.alert('提示', '操作成功', "info", function () {
                            parent.$('#approveDiv').dialog('close');
                            parent.$("#List").datagrid("reload");
                            sign = 0
                        });
                    } else {
                        $.messager.alert('提示', data.Message, "info", function () {
                            parent.$("#List").datagrid("reload");
                            sign = 0
                        });
                    }
                    parent.$('#List').datagrid("clearSelections");
                },
                error: function () {
                    loading(1);
                    sign = 0;
                }
            });
        }
    }
</script>
<table class="fromEditTable setTextWidth300">
    <tr>
        <td>
            <div class="approve-btn-box">
                <div class="btn-bar">
                    <a href="#" id="btnAgree" class="icon-agree">同意</a>
                    <a href="#" id="btnUnAgree" class="icon-disagree">不同意</a>
                </div>
              @*  @if (Model.Step != Convert.ToInt32(ViewData["Step"]))
                {
                    <span>下级审核人:</span>
                
                    <select id="InterceptNextApprove" name="InterceptNextApprove">
                    </select>
                }*@
            </div>
        </td>
        <td style="text-align: right">审核备注：
        </td>
        <td>
            <input type="text" id="Memo" /></td>
    </tr>
</table>
<table class="fromEditTable setTextWidth300">
    <tbody>

        <tr>
            <td style="width: 120px; text-align: right;">
                @Html.LabelFor(model => model.PostUSer)：    
            </td>
            <td>
                @Html.DisplayFor(model => model.PostUSer)
            </td>
            <td style="width: 90px; text-align: right;">
                @Html.LabelFor(model => model.OrderNumber)：   
            </td>
            <td>
                @Html.DisplayFor(model => model.OrderNumber)
            </td>
            <td style="width: 90px; text-align: right;">
                @Html.LabelFor(model => model.MailNo)：   
            </td>
            <td>
                @Html.DisplayFor(model => model.MailNo)
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.TelPhone)：   
            </td>
            <td>
                @Html.DisplayFor(model => model.TelPhone)
            </td>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.Reson)：   
            </td>
            <td>
                @Html.DisplayFor(model => model.Reson)
            </td>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.Receiver)：
            </td>
            <td>
                @Html.DisplayFor(model => model.Receiver)
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.LoadExpressName)：   
            </td>
            <td>
                <span class="green">@Html.DisplayFor(model => model.LoadExpressName)</span>
            </td>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.LoadAddress)：   
            </td>
            <td>
                <span class="green">@Html.DisplayFor(model => model.LoadAddress)</span>
            </td>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.LoadWarhouse)：   
            </td>
            <td>
                <span class="green">@Html.DisplayFor(model => model.LoadWarhouse)</span>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.ExpressName)：   
            </td>
            <td>
                <span class="red">@Html.DisplayFor(model => model.ExpressName)</span>
            </td>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.Address)：   
            </td>
            <td>
                <span class="red">@Html.DisplayFor(model => model.Address)</span>
            </td>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.Warhouse)：   
            </td>
            <td>
                <span class="red">@Html.DisplayFor(model => model.Warhouse)</span>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">
                @Html.LabelFor(model => model.Memo):
            </td>
            <td colspan="5">
                @Html.DisplayFor(model => model.Memo)
            </td>
        </tr>
    </tbody>
</table>
<table id="List"></table>
<hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" />
@Html.Raw(ViewData["history"])
