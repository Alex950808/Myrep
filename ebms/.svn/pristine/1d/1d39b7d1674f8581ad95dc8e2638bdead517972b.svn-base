@model EBMS.Models.T_ExchangeCenter
@{
    ViewBag.Title = "ViewExchangeGoodsWarhouse";
    Layout = "~/Views/Shared/_Main_Edit.cshtml";
}

<script type="text/javascript">
    var grid; //定义全局变量datagrid
    var editRow = -1;
    //加载数据
    $(function () {
        var url = "GetExchangeGoodsWarhouseDetail?exchangeId=" + "@Model.ID";
        grid = $('#List').datagrid({
            url: url,
            width: $(window).width() - 15,
            method: 'post',
            height: $(window).height() * 0.43,
            fitColumns: true,
            sortName: 'ID',
            sortOrder: 'desc',
            idField: 'ID',
            pageSize: 10,
            pagination: true,
            striped: true, //奇偶行是否区分
            singleSelect: true,//单选模式
            rownumbers: false,//行号
            columns: [[
                    { field: 'SendProductName', title: '寄回产品名称', width: 140, align: 'center', editor: { type: 'validatebox' } },
                    { field: 'SendProductNum', title: '寄回产品数量', width: 80, align: 'center', editor: { type: 'numberbox' } },
            { field: 'WarhouseNum', title: '仓库实收数量', width: 80, align: 'center', editor: { type: 'numberbox' } },
                                                 {
                                                     field: 'action', title: '操作', width: 100, align: 'center', formatter: function (value, row, index) {
                                                         return '<div class="btn-bar"><a herf="#"  onclick="removeRow(' + index + ')" class="icon-remove">删除</a></div>';
                                                     }

                                                 }
            ]],
            onClickCell: function (index, field) {

                //只有数量可以编辑
                if (field == 'WarhouseNum' || field == 'SendProductNum' || field == 'SendProductName')
                    editCell(index, field);
                else
                    grid.datagrid('endEdit', index);

            }, onAfterEdit: function (value, row) {
                saveJson();
            }
        });





        var sign = 0;
        $("#btnSave").click(function () {
            if ($("#EditForm").valid()) {
                grid.datagrid("endEdit", editRow);
                saveJson();
                var rows = $('#List').datagrid("getRows");
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i].WarhouseNum == undefined || rows[i].WarhouseNum == "" || rows[i].SendProductNum == undefined || rows[i].WarhouseNum == "") {
                        $.messager.alert('提示', "数量必填", "info")
                        return false;
                    }
                }
                if (sign == 0) {
                    sign++;
                    loading(0);
                    $.ajax({
                        url: "Warhouse?detailList=" + $("#jsonStr").val() + "&approveid=" + "@ViewData["approveid"]",
                        type: "Post",
                        success: function (data) {
                            loading(1);
                            if (data.State == "Success") {
                                $.messager.alert('提示', '@Lib.MessageRes.SaveOK', "info", function () {
                                    parent.$('#warhouseDiv').dialog('close');
                                    parent.$("#List").datagrid("reload");
                                    sign = 0
                                });
                            } else {
                                $.messager.alert('提示', data.Message, "info", function () {
                                    $("#List").datagrid("reload");
                                    sign = 0
                                });
                            }
                        },
                        error: function () {
                            loading(1);
                            sign = 0;
                        }
                    });
                }
            }
        });

        //新增明细
        $('#btnAdd').bind('click', function () {
            if (editRow != -1) {
                grid.datagrid("endEdit", editRow);
                editRow = -1;
            }
            else {
                $('#List').datagrid('appendRow', {
                    SendProductName: "",
                    SendProductNum: "",
                    WarhouseNum: ""
                })
            }
        });
    });

    function removeRow(index) {
        $('#List').datagrid('deleteRow', index);
        var rows = $('#List').datagrid("getRows");
        $('#List').datagrid("loadData", rows);
        saveJson();
    }


    function saveJson() {

        JsonText = "[";
        var rows = $('#List').datagrid('getRows');

        for (var i = 0; i < rows.length; i++) {
            JsonText += '{';
            JsonText += '"SendProductCode":' + '"' + rows[i].SendProductCode + '",';
            JsonText += '"SendProductName":' + '"' + rows[i].SendProductName + '",';
            JsonText += '"SendProductNum":' + '"' + rows[i].SendProductNum + '",';
            JsonText += '"WarhouseNum":' + '"' + rows[i].WarhouseNum + '"},';
        }
        JsonText = JsonText.substring(0, JsonText.length - 1);
        JsonText += "]";
        if (rows.length == 0)
            JsonText = "";
        $("#jsonStr").val(JsonText);
    }

    function editCell(index, field) {
        grid.datagrid('endEdit', editRow);
        editRow = index;
        grid.datagrid('selectRow', index);
        grid.datagrid('beginEdit', index);
        var editor = grid.datagrid('getEditor', { index: index, field: field });
        //numberbox 特殊处理
        setTimeout(function () {
            editor.target.focus();
        }, 0);

        var editors = grid.datagrid('getEditors', index);
        for (var i = 0; i < editors.length; i++) {
            editors[i].target.bind('keydown', { field: editors[i].field }, function (e) {
                if (e.keyCode == 13) {
                    grid.datagrid('endEdit', index);
                    editRow = -1;;
                } else if (e.keyCode == 38) {	// up

                    if (editRow > 0) {
                        editCell(editRow - 1, e.data.field);
                    }
                } else if (e.keyCode == 40) {	// down

                    if (editRow < grid.datagrid('getRows').length - 1) {
                        editCell(parseInt(editRow) + 1, e.data.field);
                    }
                }
                if (i < 2) {
                    if (!(event.keyCode == 46) && !(event.keyCode == 9) && !(event.keyCode == 8) && !(event.keyCode == 37) && !(event.keyCode == 39))
                        if (!((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)))
                            event.returnValue = false;
                }
            });
        }
    }
    $(document).not(grid).on("click", function () {
        grid.datagrid("endEdit", editRow);
        grid.datagrid('unselectAll');
    });
</script>
<div class="mvctool">
    <a href="#" class="easyui-linkbutton" plain="true" iconcls="icon-add" id="btnAdd">添加详情</a>
    <input id="btnSave" class="modal-btn modal-btn-save" type="submit" value="收货">
</div>
@using (Html.BeginForm("EditForm", "Controller", null, FormMethod.Post, new { Id = "EditForm" }))
{
    @Html.ValidationSummary(true)
    <table class="fromEditTable setTextWidth300">
        <tr>
            <td style="width: 16.5%; text-align: right">
                <input type="hidden" id="jsonStr" />
                @Html.LabelFor(model => model.OrderCode)：
            </td>
            <td style="width: 16.5%;">@Html.DisplayFor(model => model.OrderCode)</td>
            <td style="width: 16.5%; text-align: right">
                @Html.LabelFor(model => model.VipName)：
            </td>
            <td style="width: 16.5%;">@Html.DisplayFor(model => model.VipName)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.StoreName)：
            </td>
            <td>@Html.DisplayFor(model => model.StoreName)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.NeedWarhouse)：
            </td>
            <td>@Html.DisplayFor(model => model.NeedWarhouse)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.NeedExpress)：
            </td>
            <td>@Html.DisplayFor(model => model.NeedExpress)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReceivingName)：
            </td>
            <td>@Html.DisplayFor(model => model.ReceivingName)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReturnWarhouse)：
            </td>
            <td>@Html.DisplayFor(model => model.ReturnWarhouse)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.NeedPostalCode)：
            </td>
            <td>@Html.DisplayFor(model => model.NeedPostalCode)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReceivingPhone)：
            </td>
            <td>@Html.DisplayFor(model => model.ReceivingPhone)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReceivingTelPhone)：
            </td>
            <td>@Html.DisplayFor(model => model.ReceivingTelPhone)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.VipCode)：
            </td>
            <td>@Html.DisplayFor(model => model.VipCode)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReceivingAddress)：
            </td>
            <td>@Html.DisplayFor(model => model.ReceivingAddress)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReturnExpressName)：
            </td>
            <td>@Html.DisplayFor(model => model.ReturnExpressName)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReturnExpressCode)：
            </td>
            <td>@Html.DisplayFor(model => model.ReturnExpressCode)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.SalesRemark)：
            </td>
            <td>@Html.DisplayFor(model => model.SalesRemark)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.BuyRemark)：
            </td>
            <td>@Html.DisplayFor(model => model.BuyRemark)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.AddressMessage)：
            </td>
            <td>@Html.DisplayFor(model => model.AddressMessage)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ExchangeReson)：
            </td>
            <td>@Html.DisplayFor(model => model.ExchangeReson)</td>
        </tr>
    </table>
}
<table id="List"></table>

