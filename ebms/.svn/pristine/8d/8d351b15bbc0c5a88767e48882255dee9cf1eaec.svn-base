@model EBMS.Models.T_Reissue
@{
    ViewBag.Title = "ViewReissueAdd";
    Layout = "~/Views/Shared/_Main_Edit.cshtml";
}
<style>
    .setTextWidth600 input[type="text"] {
        width: 600px;
    }

    #Sex {
        width: 60px;
        text-align: center;
    }

    #Memo {
        width: 600px;
        height: 60px;
        margin: 10px 0;
        resize: none;
    }

    #data-tr p {
        float: left;
        margin-right: 15px;
    }

        #data-tr p input[type="checkbox"] {
            float: left;
            margin: 1px 5px 0 0;
        }

    .uploadBtn {
        color: #2299ee;
    }

        .uploadBtn:hover {
            color: #1d51a5;
        }

    .multiple-hidden {
        display: none;
    }

    #files-btn {
        color: #333;
        margin-right: 15px;
        padding-left: 16px;
        margin-bottom: 10px;
        display: table;
        margin-top: 15px;
    }

        #files-btn:hover {
            color: #2299ee;
        }

    #files-box {
        margin: 10px 0;
        float: left;
    }

        #files-box li {
            height: 25px;
            line-height: 25px;
            float: left;
            margin-right: 10px;
        }

    .files-name {
        height: 25px;
        overflow: hidden;
    }

    .files-size {
        margin: 0 10px;
        color: #999;
    }

    #files-box li a {
        color: #333;
    }

    #files-box li .files-delete {
        color: #2299ee;
    }

    .no-border {
        border: 0;
    }
</style>
<script type="text/javascript">
    var grid; //定义全局变量datagrid
    var editRow = -1;
    var paid = 0;
    function op(name, url) {
        self.parent.addTab(name, url, '');
        getContextmenu()
    }
    //加载数据
    $(function () {
        grid = $('#List').datagrid({
            width: $(window).width() - 10,
            height: $(window).height() * 0.55,
            fitColumns: true,
            showFooter: true,
            sortName: 'ID',
            sortOrder: 'desc',
            idField: 'ID',
            pageSize: 10,
            singleSelect: true,//单选模式
            rownumbers: false,//行号
            columns: [[
                { field: 'ProductCode', title: '产品编码', width: 100, align: 'center' },
                    { field: 'ProductName', title: '产品名称', width: 140, align: 'center' },
                     { field: 'Price', title: '产品单价', width: 80, align: 'center',editor: {
                        type: 'numberbox',
                        options: {
                             min: 0,
                             precision: 2,},
                     }
                     },
                    { field: 'Num', title: '数量', width: 80, align: 'center', editor: { type: 'numberbox' } },
                    { field: 'Remark', title: '备注', width: 100, align: 'center', editor: { type: 'validatebox' } },
                    {
                        field: 'action', title: '操作', width: 100, align: 'center', formatter: function (value, row, index) {
                            return '<div class="btn-bar"><a herf="#"  onclick="removeRow(' + index + ')" class="icon-remove">删除</a></div>';
                        }

                    }
            ]],
            onClickCell: function (index, field) {

                //只有数量可以编辑
                if (field == 'Num' || field == 'Remark' || field == 'Price')
                    editCell(index, field);
                else if (field == "ProductCode" || field == "ProductName") {
                    $('#openIframeproduct')[0].src = "../ExchangeCenter/ViewProduct?index=" + index;
                    $('#productDiv').dialog('open');
                    grid.datagrid('endEdit', index);
                } else
                    grid.datagrid('endEdit', index);

            }, onAfterEdit: function (value, row) {
                saveJson();
            }
        });
        enterSearch("#btnQuery");
        var sign = 0;
        $("#btnQuery").click(function () {
            if ($("#OrderCode").val().trim() == "") {
                $.messager.alert('提示', "请输入订单号", "info");
                return false;
            }
            if (sign == 0) {
                loading(0);
                $.post("../Reissue/GetReissueByGy", { "code": $("#OrderCode").val().trim() }, function (data) {
                    sign++;
                    if (data.State == "Success") {
                    	paid = data.ModelList["Cost"];
                    	
                        if (data.ModelList["SystemRemark"] != "") {
                            $.messager.confirm('提示', data.ModelList["SystemRemark"] + "是否继续", function (r) {
                                if (r) {
                                    $("#OrderCode").val(data.ModelList["OrderCode"]);
                                    $("#VipName").val(data.ModelList["VipName"]);
                                    $("#StoreName").val(data.ModelList["StoreName"]);
                                    $("#ReceivingName").val(data.ModelList["ReceivingName"]);
                                    $("#PostalCode").val(data.ModelList["PostalCode"]);
                                    $("#Phone").val(data.ModelList["Phone"]);
                                    $("#TelPhone").val(data.ModelList["TelPhone"]);
                                    $("#VipCode").val(data.ModelList["VipCode"]);
                                    $("#Address").val(data.ModelList["Address"]);
                                    $("#AddressMessage").val(data.ModelList["AddressMessage"]);
                                    $("#SingleTime").val(data.ModelList["SingleTime"]);
                                    $("#StoreCode").val(data.ModelList["StoreCode"]);
                                    $("#OrderSCode").val(data.ModelList["OrderCode"]);
                                    $("#BusinessName").val(data.ModelList["BusinessName"]);
                                   
                                    $("#SystemRemark").val(data.ModelList["SystemRemark"] + data.ModelList["ExpressName"]);
                                    $('#List').datagrid('loadData', { total: 0, rows: [] });
                                    if ($("#SystemRemark").val() != "") {
                                        $("#SystemRemark").css("color", "#d02e2e")
                                    }
                                    $(data.Json.rows).each(function (i, item) {
                                        $('#List').datagrid('appendRow', { ProductCode: item.ProductCode, ProductName: item.ProductName, Price: item.Price })
                                    });
                                } else
                                    window.location.reload();
                            });
                        } else {
                            $("#OrderCode").val(data.ModelList["OrderCode"]);
                            $("#VipName").val(data.ModelList["VipName"]);
                            $("#StoreName").val(data.ModelList["StoreName"]);
                            $("#ReceivingName").val(data.ModelList["ReceivingName"]);
                            $("#PostalCode").val(data.ModelList["PostalCode"]);
                            $("#Phone").val(data.ModelList["Phone"]);
                            $("#TelPhone").val(data.ModelList["TelPhone"]);
                            $("#VipCode").val(data.ModelList["VipCode"]);
                            $("#Address").val(data.ModelList["Address"]);
                            $("#AddressMessage").val(data.ModelList["AddressMessage"]);
                            $("#SingleTime").val(data.ModelList["SingleTime"]);
                            $("#StoreCode").val(data.ModelList["StoreCode"]);
                            $("#OrderSCode").val(data.ModelList["OrderCode"]);
                            $("#BusinessName").val(data.ModelList["BusinessName"]);
                            $("#SystemRemark").val(data.ModelList["SystemRemark"] + data.ModelList["ExpressName"]);
                            $('#List').datagrid('loadData', { total: 0, rows: [] });
                            if ($("#SystemRemark").val() != "") {
                                $("#SystemRemark").css("color", "#d02e2e")
                            }
                            $(data.Json.rows).each(function (i, item) {
                                $('#List').datagrid('appendRow', { ProductCode: item.ProductCode, ProductName: item.ProductName, Price: item.Price })
                            });
                        }
                        loading(1);
                        sign = 0;
                    } else {
                        $.messager.alert('提示', data.Message, "info", function () {
                            window.location.reload();
                        });
                    }
                });
            }
        })
        @*add("@ViewData["code"]");*@

        $("#btnSubmit").click(function () {
            Save()
        });
        var sign = 0;
        function Save() {
        	saveJson()
        	saveJson1();
            if ($("#OrderSCode").val().trim() !== $("#OrderCode").val().trim()) {
                $("#SystemRemark").val($("#SystemRemark").val() + $("#OrderSCode").val().trim() + "查询订单和保存订单不一致,");
            }


            if (!$("#AddressMessage").val()) {
                $.messager.alert('提示', "请填写地址信息即省市区", "info")
                loading(1);
                return
            }
            if (!$("#Address").val()) {
             
                $.messager.alert('提示', "请填写收货地址", "info")
                loading(1);
                return
            }
            if ($("#OrderCode").val() == "") {
                $.messager.alert('提示', "请填写订单编号", "info")
                loading(1);
                return
            }
            if ($("#StoreName").val() == "") {
                $.messager.alert('提示', "请填写店铺", "info")
                loading(1);
                return
            }
            if ($("#VipCode").val() == "") {
                $.messager.alert('提示', "请填写会员代码", "info")
                loading(1);
                return
            }
            if ($("#VipName").val() == "") {
                $.messager.alert('提示', "请填写会员名称", "info")
                loading(1);
                return
            }
            if ($("#OrderType option:selected").text() == "" || $("#OrderType option:selected").val() == "") {
                console.log("发货快递必须选择");
                $.messager.alert('提示', "补发类型必须选择", "info")
                return false;
            }
            if ($("#ExpressName option:selected").text() == "" || $("#ExpressName option:selected").val() == "") {
                
                console.log("发货快递必须选择");
                $.messager.alert('提示', "发货快递必须选择", "info")
                return false;
            }
          
            if ($("#WarhouseName option:selected").text() == "" || $("#WarhouseName option:selected").val() == "") {
                $.messager.alert('提示', "发货仓库不能为空", "info")
                return false;
            }

            //if ($("#ReissueReson option:selected").text() == "快递破损" && $("#jsonStr1").val() == "") {
            //    $.messager.alert('提示', "快递破损必须上传图片", "info")
            //    return false;
            //}
            if ($("#Phone").val().trim() == "" && $("#TelPhone").val().trim() == "") {
                $.messager.alert('提示', "固定电话或移动电话必须填一个", "info")
                return false;
            }
            if ($("#EditForm").valid()) {
                grid.datagrid("endEdit", editRow);
                var rows = $('#List').datagrid("getRows");
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i].Num == undefined || rows[i].Num == "" || rows[i].Num == "0") {
                        $.messager.alert('提示', "数量不能为空", "info")
                        return false;
                    }
                    if (rows[i].ProductCode == undefined || rows[i].ProductCode == "") {
                        $.messager.alert('提示', "产品不能为空", "info")
                        return false;
                    }
                }
                if (sign == 0) {
                    sign++;
                    loading(0);
                    $.ajax({
                        url: "ReissueAddSave",
                        type: "Post",
                        data: $("#EditForm").serialize(),
                        success: function (data) {
                            loading(1);
                            if (data.State == "Success") {
                                $.messager.alert('提示', '@Lib.MessageRes.SaveOK', "info", function () {
                                    window.location.reload();
                                });
                            } else {
                                $.messager.alert('提示', data.Message, "info", function () {
                                    sign = 0
                                });
                            }
                        },
                        error: function () {
                            loading(1);
                            sign = 0;
                        }
                    });
                }
            }
        }
        //新增明细
        $('#btnAdd').bind('click', function () {
            if (editRow != -1) {
                grid.datagrid("endEdit", editRow);
                editRow = -1;
            }
            else {
                $('#List').datagrid('appendRow', {
                    ProductCode: "",
                    ProductName: "",
                    Price: "",
                    Num: "",
                    Remark: ""
                })
            }
        });
        $("#ReissueReson").change(function () {
            if ($("#ReissueReson option:selected").text() == "快递破损") {
                $("#Uplod").show();
            } else
                $("#Uplod").hide();
        });

        $("#files-btn").click(function () {
            $("#file").click();
        })

        $("#file").change(function () {
            var files = $("#file")[0].files
            var $li = "";
            var $size = 0;
            var postSize = files[0].size;
            if (postSize > 10485760) {
                $.messager.alert('提示', "单个文件不能大于10M", "info")
                return;
            }
            var formData = new FormData($("#EditForm")[0]);
            $.ajax({
                type: "POST",
                data: formData,
                url: "Upload",
                contentType: false,
                processData: false,
            }).success(function (data) {
                if (data.status) {
                    $size = files[0].size / 1024;
                    $li += "<li data-name=" + files[0].name + " data-url=" + data.link + " data-size = " + $size.toFixed(2) + " data-path=" + data.title + "><a href='" + data.link + "' target='_blank'><span class='files-name'>" + files[0].name + "</span><span  class='files-size'>(" + $size.toFixed(2) + "KB)</span></a><a href='#' onclick='DeleteFile(this,\"" + data.title + "\")' title=" + data.title + " class='files-delete'>删除</a></li>";
                    $("#files-box").append($li);
                    saveJson1();
                } else {
                    $.messager.alert('提示', data.msg, "info")
                }

            }).error(function (data) {
                alert(data);
            });
        })
    });

    function saveJson1() {
        JsonText = "[";
        var rows = $('#files-box li');
        if (rows.length == 0) {
            $("#jsonStr1").val("");
            return
        }
        for (var i = 0; i < rows.length; i++) {
            var row = $(rows[i]);
            JsonText += '{';
            JsonText += '"ScName":' + '"' + row.attr("data-name") + '",';
            JsonText += '"Url":' + '"' + row.attr("data-url") + '",';
            JsonText += '"Size":' + '"' + row.attr("data-size") + '",';
            JsonText += '"Path":' + '"' + row.attr("data-path") + '"},';
        }
        JsonText = JsonText.substring(0, JsonText.length - 1);
        JsonText += "]";
        $("#jsonStr1").val(JsonText);
    }
    saveJson1()

    //删除附件图片
    function DeleteFile(_this, path) {
        $(_this).closest("li").remove();
        $.ajax({
            type: "POST",
            url: "DeleteModelFile?path=" + path,
            contentType: false,
            processData: false,
        }).success(function (data) {
            saveJson1()
        }).error(function (data) {
            alert(data);
        });
    }

    function removeRow(index) {
        $('#List').datagrid('deleteRow', index);
        var rows = $('#List').datagrid("getRows");
        $('#List').datagrid("loadData", rows);
        saveJson();
    }

    function addproduct(row, index) {
        $('#productDiv').dialog('close');
        var rows = $('#List').datagrid('getRows');
        for (var i = 0; i < rows.length; i++) {
            if (row.goods_no == rows[i].ProductCode) {
                $.messager.alert('提示', '重复编码', "info");
                return false;
            }
        }
      
        $('#List').datagrid('updateRow', {
            index: index,
            row: {
                ProductCode: row.goods_no,
                ProductName: row.goods_name,
                Price: row.retail_price
            }
        });
        saveJson();
    }

    //function add(code) {
    //    grid.datagrid('loadData', { total: 0, rows: [] });
    //    $.post("../ExchangeCenter/GetOrderDetail", { "oid": code }, function (data) {
    //        $(data).each(function (i, item) {
    //            $('#List').datagrid('appendRow', { ProductCode: item.item_code, ProductName: item.item_name, Price: item.price })
    //        });
    //    });
    //}

    //关闭当前页面
    //function closeCurTab(name) {
    //    var parentTab = parent.$('#mainTab').tabs('select', name);
    //    var curTab = self.parent.$('#mainTab').tabs('getSelected');// 当前tab
    //    var index = self.parent.$('#mainTab').tabs('getTabIndex', curTab);
    //    self.parent.$('#mainTab').tabs('close', index);
    //}

    //function addTab() {
    //    op("补发货新增订单", "../Reissue/ViewOrderList");
    //    closeCurTab("补发货新增");//关闭当前页面
    //}

    function saveJson() {

        JsonText = "[";
        var rows = $('#List').datagrid('getRows');

        for (var i = 0; i < rows.length; i++) {
            JsonText += '{';
            JsonText += '"ProductCode":' + '"' + rows[i].ProductCode + '",';
            JsonText += '"ProductName":' + '"' + rows[i].ProductName + '",';
            JsonText += '"Price":' + '"' + rows[i].Price + '",';
            JsonText += '"Num":' + '"' + rows[i].Num + '",';
            JsonText += '"Remark":' + '"' + rows[i].Remark + '"},';
        }
        JsonText = JsonText.substring(0, JsonText.length - 1);
        JsonText += "]";
        if (rows.length == 0)
            JsonText = "";
        $("#jsonStr").val(JsonText);
    }

    function editCell(index, field) {
        grid.datagrid('endEdit', editRow);
        editRow = index;
        grid.datagrid('selectRow', index);
        grid.datagrid('beginEdit', index);
        var editor = grid.datagrid('getEditor', { index: index, field: field });
        //numberbox 特殊处理
        setTimeout(function () {
            editor.target.focus();
        }, 0);

        var editors = grid.datagrid('getEditors', index);
        for (var i = 0; i < editors.length; i++) {
            editors[i].target.bind('keydown', { field: editors[i].field }, function (e) {
                if (e.keyCode == 13) {
                    grid.datagrid('endEdit', index);
                    editRow = -1;;
                } else if (e.keyCode == 38) {	// up

                    if (editRow > 0) {
                        editCell(editRow - 1, e.data.field);
                    }
                } else if (e.keyCode == 40) {	// down

                    if (editRow < grid.datagrid('getRows').length - 1) {
                        editCell(parseInt(editRow) + 1, e.data.field);
                    }
                }
                if (i < 2) {
                    if (!(event.keyCode == 46) && !(event.keyCode == 9) && !(event.keyCode == 8) && !(event.keyCode == 37) && !(event.keyCode == 39))
                        if (!((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)))
                            event.returnValue = false;
                }
            });
        }
    }
    $(document).not(grid).on("click", function () {
        grid.datagrid("endEdit", editRow);
        grid.datagrid('unselectAll');
    });
    function Plan(plan_no) {

    	$("#ExpressName").val("顺丰快递小件（3kg以下）");
    	$("#OrderType").val("售后补发");
    	$("#WarhouseName").val("7311021");
    	//$("#ReissueReson").val("漏发");
    	$("#ReissueReson").val("发票问题");
    	$("#SalesRemark").val("后台补发发票需提供发票代码发票号码开票日期，个人"+paid)
    	$('#List').datagrid('loadData', { "total": "1", rows: [{ ProductCode: "654321", ProductName: "补发发票代码", Price: 0, Num: 1, Remark: " " }] })
    }
</script>
<div class="mvctool">
    <a href="#" class="easyui-linkbutton" plain="true" iconcls="icon-add" id="btnAdd">添加详情</a>
    <input id="btnSubmit" class="modal-btn modal-btn-save" type="submit" value="提交">
	<button onclick="Plan()"> &nbsp;&nbsp; 发票问题 &nbsp;&nbsp;  </button>
</div>
@using (Html.BeginForm("EditForm", "Controller", null, FormMethod.Post, new { Id = "EditForm" }))
{
    @Html.ValidationSummary(true)
    <table class="fromEditTable setTextWidth300">
        <tr>
            <td style="width: 10%; text-align: right">
                @Html.Hidden("jsonStr")
                @Html.Hidden("jsonStr1")
                @Html.HiddenFor(model => model.SingleTime)
                @Html.HiddenFor(model => model.StoreCode)
                @Html.HiddenFor(model => model.OrderId)
                  @Html.HiddenFor(model => model.OrderSCode)
                @Html.LabelFor(model => model.OrderCode)：
            </td>
            <td style="width: 30%;">@Html.TextBoxFor(model => model.OrderCode)
                <input type="button" value="查询" id="btnQuery" class="icon-search"></td>
            <td style="width: 16.5%;">@Html.ValidationMessageFor(model => model.OrderCode)</td>
            <td style="width: 16.5%; text-align: right">@Html.LabelFor(model => model.StoreName)：</td>
            <td style="width: 16.5%;">@Html.TextBoxFor(model => model.StoreName, new { @readonly = "readonly" })</td>
            <td style="width: 16.5%; text-align: left">@Html.ValidationMessageFor(model => model.StoreName)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ExpressName)：
            </td>
            <td>@Html.DropDownList("ExpressName", ViewData["express_Name"] as List<SelectListItem>)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.ExpressName)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.BusinessName)：
            </td>
            <td>@Html.TextBoxFor(model => model.BusinessName)</td> @*, new { @readonly = "readonly" }*@
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.BusinessName)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.OrderType)：
            </td>
            <td>@Html.DropDownList("OrderType", ViewData["order_Type"] as List<SelectListItem>)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.OrderType)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReceivingName)：
            </td>
            <td>@Html.TextBoxFor(model => model.ReceivingName)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.ReceivingName)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.WarhouseName)：
            </td>
            <td>@Html.DropDownList("WarhouseName", ViewData["warhouse_Name"] as List<SelectListItem>)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.WarhouseName)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.Phone)：
            </td>
            <td>@Html.TextBoxFor(model => model.Phone)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.Phone)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.ReissueReson)：
            </td>
            <td>@Html.DropDownListFor(model => model.ReissueReson, ViewData["reson"] as List<SelectListItem>)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.ReissueReson)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.TelPhone)：
            </td>
            <td>@Html.TextBoxFor(model => model.TelPhone)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.TelPhone)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.VipCode)：@*, new { @readonly = "readonly" }*@
            </td>
            <td>@Html.TextBoxFor(model => model.VipCode)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.VipCode)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.PostalCode)：
            </td>
            <td>@Html.TextBoxFor(model => model.PostalCode)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.PostalCode)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.VipName)：@*, new { @readonly = "readonly" }*@
            </td>
            <td>@Html.TextBoxFor(model => model.VipName)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.VipName)</td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.AddressMessage)：
            </td>
            <td>@Html.TextBoxFor(model => model.AddressMessage, new { @placeholder = "格式:省-市-区" })</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.AddressMessage)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.BuyRemark)：
            </td>
            <td>@Html.TextBoxFor(model => model.BuyRemark, new { placeholder = "除了,或 .请不要出现其他特殊字符如(* + - ;等)" })</td>
            <td></td>
            <td style="text-align: right">
                @Html.LabelFor(model => model.Address)：
            </td>
            <td>@Html.TextBoxFor(model => model.Address)</td>
            <td style="text-align: left">@Html.ValidationMessageFor(model => model.Address)</td>
        </tr>
        <tr>
            <td style="text-align: right">
                @Html.LabelFor(model => model.SalesRemark)：
            </td>
            <td>@Html.TextAreaFor(model => model.SalesRemark, new { placeholder = "除了,或.请不要出现其他特殊字符如(* + - ;等)" })</td>
            <td></td>
            <td style="text-align: right">系统备注：
            </td>
            <td colspan="2">@Html.TextBoxFor(model => model.SystemRemark, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td></td>
            <td colspan="5">
                <div id="Uplod" style="display: none">
                    <ul id="files-box"></ul>
                    <a href="#" style="color: red" class="icon-add" id="files-btn">上传破损图片</a>
                    <div class="multiple-hidden">
                        <input type="file" name="file" id="file" accept="image/*" />
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
<table id="List"></table>
<div id="productDiv" class="easyui-dialog" closed="true" modal="true" title="选择需发产品" style="width: 500px; height: 420px;" resizable="true" closable="true">
    <iframe scrolling="auto" id='openIframeproduct' frameborder="0" src="" style="width: 98%; height: 98%;"></iframe>
</div>
<div id="openOrder" class="easyui-dialog" closed="true" modal="true" title="选择订单信息" style="width: 750px; height: 400px;" resizable="true" closable="true">
    <iframe scrolling="auto" id='openIframeOrder' frameborder="0" src="" style="width: 100%; height: 98%;"></iframe>
</div>
