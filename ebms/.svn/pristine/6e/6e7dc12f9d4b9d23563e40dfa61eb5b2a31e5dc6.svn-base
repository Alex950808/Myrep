@model EBMS.Models.T_Retreat
@using Lib
@{
    ViewBag.Title = "ViewPurchaseEdit";
    Layout = "~/Views/Shared/_Main_Edit.cshtml";
}
<script type="text/javascript">
    var grid; //定义全局变量datagrid
    var editRow = -1;
    //加载数据
    $(function () {
        //创建一个新的Grid
        grid = $('#List').datagrid({
            width: $(window).width() - 10,
            height: $(window).height() - 250,
            fitColumns: true,
            showFooter: true,
            singleSelect: true,//单选模式
            rownumbers: false,//行号
            columns: [[
                      {
                          field: 'item_code', title: '产品编码', width: 80
                      },
                      {
                          field: 'item_name', title: '产品名称', width: 80
                      },
                        {
                            field: 'price', title: '支付价格', width: 80
                        },
                          {
                              field: 'amount', title: '原价', width: 80
                          },
                {
                    field: 'qty', title: '数量', width: 80, editor: {
                        type: 'text', options: { required: true }
                    }
                },
                    {
                        field: 'action', title: '操作', width: 120, align: 'center', formatter: function (value, row, index) {
                            return '<div class="btn-bar"><a onclick="removeRow(' + index + ')" class="icon-remove">删除</a></div>';
                        }
                    },
            ]],
            onClickCell: function (index, field) {

                if (field == "item_code" || field == "item_name") {
                    $('#openIframeGoodsGY')[0].src = "ViewGoodsGY?index=" + index;
                    $('#GoodsGYDiv').dialog('open');
                }
                else if (field != 'action') {
                    editCell(index, field);
                }
            },
            onAfterEdit: function (index) {
                grid.datagrid('refreshRow', index);
                updateFooter()
                saveJson();
            }
        });
        grid.datagrid('loadData', { total: 0, rows: [], "footer": [{ "Unit": "合计", "UnitPrice": 0.00, "Qty": 0 }] });
        var RetreatId = "@ViewData["ID"]";
        function fLoadData() {
            $.ajax({
                type: "POST",
                url: "EditGetDetail?ID=" + RetreatId,
                success: function (data) {
                    var vData = $.parseJSON(data);
                    grid.datagrid('loadData', vData); //将数据绑定到datagrid   
                    saveJson();
                    updateFooter();
                }
            });
        }
        fLoadData();
        $(window).resize(function () {
            $('#List').datagrid('resize', {
                width: $(window).width() - 10,
                height: $(window).height() - 191
            })
        });
        //提交后台方法
        var sign = 0;
        $("#btnSave").click(function () {

            loading(0);
            if (parseInt($("#Retreat_Shouldjine").val()) > parseInt($("#OrderpaymentMoney").val())) {
                $.messager.alert('提示', "应退金额不能大于支付金额", "info")
                loading(1);
                return
            }
            loading(0);
            if ($("#Retreat_Warehouse").val() == "") {
                $.messager.alert('提示', "请选择仓库", "info")
                loading(1);
                return
            }
            if ($("#OrderSatus").val() == "") {
                $.messager.alert('提示', "请选择订单退款状态", "info")
                loading(1);
                return
            }
            if ($("#IsRefund").val() == "") {
                $.messager.alert('提示', "请选择是否退款", "info")
                loading(1);
                return
            }
            if ($("#IsReturn").val() == "") {
                $.messager.alert('提示', "请选择货物是否退回", "info")
                loading(1);
                return
            }
            if ($("#Retreat_Shouldjine").val() == "") {
                $.messager.alert('提示', "应退金额必须填写", "info")
                loading(1);
                return
            }
            if ($("#Retreat_Reason").val() == "") {
                $.messager.alert('提示', "请选择原因", "info")
                loading(1);
                return
            }
            if ($("#Retreat_expressName").val() == "") {
                $.messager.alert('提示', "请选择快递", "info")
                loading(1);
                return
            }
            if ($("#Retreat_expressNumber").val() == "") {
                $.messager.alert('提示', "快递单号必须填写", "info")
                loading(1);
                return
            }
            grid.datagrid("endEdit", editRow);
            grid.datagrid('clearSelections');
            var rows = $('#List').datagrid("getRows");
            if (rows == "") {
                $.messager.alert('提示', "请添加退货详情", "info")
                loading(1);
                return
            }
            //循环验证数据
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].qty == undefined || rows[i].qty == "") {
                    $.messager.alert('提示', "数量不允许为空", "info")
                    loading(1);
                    return false;
                }
            }
            if ($("#EditForm").valid()) {
                if (sign == 0) {
                    sign = 1;
                    $.ajax({
                        url: "ViewRetreatEditSave",
                        type: "Post",
                        data: $("#EditForm").serialize(),
                        success: function (data) {
                            if (data.State == "Success") {
                                loading(1);
                                $.messager.alert('提示', '保存成功', "info", function () {
                                    closeReshefTab("我的退货退款");
                                    sign = 0
                                });
                            } else {
                                loading(1);
                                $.messager.alert('提示', data.Message, "info", function () {
                                    $("#List").datagrid("reload");
                                    sign = 0
                                });
                            }
                        }
                    });
                }
            }
        });
    });
    //添加一行空的数据
    function addRow() {
        $('#List').datagrid('appendRow', {
            ProductName: "",
            PlanNum: "",
            Specifications: "",
            RequirementDate: "",
        })
    }
    //删除某一行数据
    function removeRow(index) {
        editCell(index, "Qty")
        var rows = $('#List').datagrid("getRows");
        $('#List').datagrid('deleteRow', index);
        $('#List').datagrid("loadData", rows);
        saveJson();
        updateFooter()
    }
    //底部统计
    function updateFooter() {
        var billCount = 0;
        var Total = 0;
        var rows = grid.datagrid('getRows');
        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            if (row.Qty) {
                billCount += parseInt(row.Qty);

            }
            if (row.UnitPrice) {
                Total += parseFloat(row.UnitPrice)
            }
        }
        grid.datagrid('reloadFooter', [{ "Unit": "合计", "UnitPrice": Total.toFixed(2), "Qty": billCount }]);
    }
    //序列化数据
    function saveJson() {
        JsonText = "[";
        var rows = $('#List').datagrid('getRows');
        for (var i = 0; i < rows.length; i++) {
            JsonText += '{';
            JsonText += '"item_code":' + '"' + rows[i].item_code + '",';
            JsonText += '"item_name":' + '"' + rows[i].item_name + '",';
            JsonText += '"price":' + '"' + rows[i].price + '",';
            JsonText += '"qty":' + '"' + rows[i].qty + '",';
            JsonText += '"amount":' + '"' + rows[i].amount + '"},';
        }
        JsonText = JsonText.substring(0, JsonText.length - 1);
        JsonText += "]";
        $("#jsonStr").val(JsonText);
    }
    //编辑触发的方法
    function editCell(index, field) {
        grid.datagrid('endEdit', editRow);
        editRow = index;
        grid.datagrid('selectRow', index);
        grid.datagrid('beginEdit', index);
        var editor = grid.datagrid('getEditor', { index: index, field: field });
        setTimeout(function () {
            editor.target.focus();
        }, 0);

        var editors = grid.datagrid('getEditors', index);
        for (var i = 0; i < editors.length; i++) {
            editors[i].target.bind('keydown', { field: editors[i].field }, function (e) {
                if (e.keyCode == 13) {
                    grid.datagrid('endEdit', index);
                    editRow = -1;;
                } else if (e.keyCode == 38) {	// up

                    if (editRow > 0) {
                        editCell(editRow - 1, e.data.field);
                    }
                } else if (e.keyCode == 40) {	// down

                    if (editRow < grid.datagrid('getRows').length - 1) {
                        editCell(parseInt(editRow) + 1, e.data.field);
                    }
                }
                if (i < 2) {
                    if (!(event.keyCode == 46) && !(event.keyCode == 9) && !(event.keyCode == 8) && !(event.keyCode == 37) && !(event.keyCode == 39))
                        if (!((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)))
                            event.returnValue = false;
                }
            });
        }

    }

    function addshop(rows, index) {
        var costPrice = rows[0].cost_price;
        if (costPrice == null || costPrice == "") {
            costPrice = 0;
        }
        $('#GoodsGYDiv').dialog('close');
        $('#List').datagrid('updateRow', {
            index: index,
            row: {
                item_code: rows[0].code,
                item_name: rows[0].name,
                price: 0,
                Simplename: rows[0].simple_name,
                amount: costPrice
            }
        });
        saveJson();//2017-08-15 by HX
    }
    //选择其他地方取消编辑
    $(document).not(grid).on("click", function () {
        grid.datagrid("endEdit", editRow);
        grid.datagrid('unselectAll');
    });

</script>
<div class="mvctool">
    <input id="btnSave" class="modal-btn modal-btn-save" type="submit" value="保存">
    <a href="#" class="easyui-linkbutton" plain="true" iconcls="icon-add" id="BtnAdd" onclick="addRow()">添加商品</a>
</div>
@using (Html.BeginForm("EditForm", "Controller", null, FormMethod.Post, new { Id = "EditForm" }))
{
    @Html.ValidationSummary(true)
    <table class="fromEditTable setTextWidth300">
        <tr>
            <td>
                @Html.Hidden("jsonStr")
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.Status)
                @Html.HiddenFor(model => model.OrderId)
                @Html.LabelFor(model => model.Retreat_OrderNumber)：   
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_OrderNumber, new { @readonly = true, onclick = "CheckOrder()" })
            </td>
            <td>
                @Html.LabelFor(model => model.Retreat_dianpName)：   
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_dianpName, new { @readonly = true })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.Retreat_CustomerName)：   
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_CustomerName, new { @readonly = true })
            </td>

            <td>
                @Html.LabelFor(model => model.Retreat_wangwang)：   
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_wangwang, new { @readonly = true })
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.CollectName)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.CollectName, new { @readonly = true })
            </td>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.CollectAddress)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.CollectAddress, new { @readonly = true })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.OrderMoney)：   
            </td>
            <td>
                @Html.TextBoxFor(model => model.OrderMoney, new { @readonly = true })
            </td>

            <td style="width: 120px;">
                @Html.LabelFor(model => model.OrderpaymentMoney)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.OrderpaymentMoney)
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.Retreat_Shouldjine)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_Shouldjine)
            </td>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.Retreat_Warehouse)：    
            </td>
            <td>
                @Html.DropDownListFor(model => model.Retreat_Warehouse, ViewData["RetreatWarehouseList"] as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.Retreat_Reason)：    
            </td>
            <td>
                @Html.DropDownListFor(model => model.Retreat_Reason, ViewData["RetreatReasonList"] as List<SelectListItem>)
            </td>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.Retreat_GoodsSituation)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_GoodsSituation)
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.Retreat_expressName)：    
            </td>
            <td>
                @Html.DropDownListFor(model => model.Retreat_expressName, ViewData["RetreatexpressNameList"] as List<SelectListItem>)
            </td>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.Retreat_expressNumber)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_expressNumber)
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.Retreat_Remarks)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.Retreat_Remarks)
            </td>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.repeat)：    
            </td>
            <td>
                @Html.TextBoxFor(model => model.repeat, new { @readonly = true })

            </td>
          
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.OrderSatus)：
            </td>
            <td>
                @Html.DropDownListFor(model => model.OrderSatus, ViewData["OrderSatuss"] as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.IsRefund)：
            </td>
            <td>
                @Html.DropDownListFor(model => model.IsRefund, ViewData["IsRefunds"] as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td style="width: 120px;">
                @Html.LabelFor(model => model.IsReturn)：
            </td>
            <td>
                @Html.DropDownListFor(model => model.IsReturn, ViewData["IsReturns"] as List<SelectListItem>)
            </td>
        </tr>
            <input type="hidden" id="jsonStr" />
</table>
}
<div class="detail-list">
    <table id="List"></table>
</div>
<div id="GoodsGYDiv" class="easyui-dialog" closed="true" modal="true" title="选择产品" style="width: 500px; height: 420px;" resizable="true" closable="true">
    <iframe scrolling="auto" id='openIframeGoodsGY' frameborder="0" src="" style="width: 98%; height: 98%;"></iframe>
</div>


