@model EBMS.Models.T_PersonnelFile
@{
    ViewBag.Title = "ViewEdit";
    Layout = "~/Views/Shared/_Main_Edit.cshtml";
}
<script src="/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {

        //$("input[name='Hiredate']").val($("#Hiredate").val())
        //$(".combo-f").attr("style", "display:none")
        $('#btnGuanBi').click(function () {
            parent.$('#openDivNew').dialog('close');
        });
        var flag = 0;
        $('#btnSave').click(function () {
            if ($("#EditForm").valid() && flag == 0) {
                flag += 1;
                loading(0)
                $.ajax({
                    url: "/Personnel/ViewEditSave",
                    type: "Post",
                    data: $("#EditForm").serialize(),
                    dataType: "json",
                    success: function (data) {
                       
                        if (data>0) {
                            $.messager.alert("提示", "保存成功", "info", function () {
                                parent.$("#DivEdit").dialog("close");
                                parent.$("#List").datagrid("reload");
                                loading(1)
                            })
                        }
                        else {
                            $.messager.alert("提示", "保存失败", "info");
                            sign = 0;
                            loading(1)
                        }
                        parent.$('#List').datagrid("clearSelections");
                    }
                });
            }
            return false;

        });

    })
   
    function shuju() { //jquery获取复选框值 
        var chk_value = [];
        $('input[name="zichan"]:checked').each(function () {
            chk_value.push($(this).val());
        });
        $('#FixedAssets').val(chk_value)

        var valu = [];
        $('input[name="entry_data"]:checked').each(function () {
            valu.push($(this).val());
        });
        $('#EntryData').val(valu)

    }
    function openUpload() {
        $('#Iframeupload')[0].src = "ViewUploadPic";
      $('#uploadDiv').dialog('open');

    }
    function checkUser()
    {
        var name = $('#NickName').val();
        $.post("/Personnel/checkUser", { 'name': name }, function (data) {
          if (data < 1)
          {
              alert('请先给该用户建立EBMS账户再添加其档案信息')
              $('#nick_name').val("");
          }
      }, 'json')
    }

</script>
<style>
    .lab {
  width: 110px; 
  text-align: right;}
   .cont {
    width:120px;
    text-align:left;
    }
</style>
<div class="mvctool">
   
   <a id="btnSave" href="javascript:;" class="modal-btn modal-btn-save">保存</a>
</div>

<div>
    @using (Html.BeginForm("EditForm", "Controllers", null, FormMethod.Post, new { Id = "EditForm" }))
{
    @Html.ValidationSummary(true)
    <table class="fromEditTable ">
       
        <tbody>
            <tr>
                <td class="lab"> 
                     @Html.LabelFor(model => model.Pic)： 

                </td>
                <td class="cont">
                     @Html.TextBoxFor(model => model.Pic, new { @readonly="readonly",onclick="openUpload()"})

                </td>  
                <td></td>

                <td class="lab">
                    @Html.LabelFor(model => model.OnJob)：
                </td>
                <td class="cont">
                    @Html.DropDownListFor(model => model.OnJob, ViewData["onjobList"] as List<SelectListItem>)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.OnJob)
                </td>
            </tr>
            <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.Character)：
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.Character)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Character)
                </td>
                <td></td>
            </tr>
                   
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.NickName)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.NickName, new {onblur="checkUser()" })
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.NickName)
                </td>
                 <td class="lab">
                    @Html.LabelFor(model => model.TrueName)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.TrueName)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.TrueName)
                </td>
            </tr>       
            <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.HealthState)：
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.HealthState)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.HealthState)
                </td>
                <td class="lab">
                    @Html.LabelFor(model => model.PoliticsStatus)：
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.PoliticsStatus)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.PoliticsStatus)
                </td>
            </tr>   
            <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.CanEntryTime)：
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.CanEntryTime, new { @class = "easyui-datebox" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.CanEntryTime)
                </td>
                <td class="lab">
                    @Html.LabelFor(model => model.ExpectedSalary)：
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.ExpectedSalary)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ExpectedSalary)
                </td>
            </tr>            
            <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.Sex)：   
                </td>
                <td  class="cont">
                    @Html.DropDownListFor(model => model.Sex, ViewData["sexList"] as List<SelectListItem>)
                </td>
                 <td>
                    @Html.ValidationMessageFor(model => model.Sex)
                </td>
                 <td class="lab">
                    @Html.LabelFor(model => model.MaritalStatus)：   
                </td>
                <td  class="cont">
                    @Html.DropDownListFor(model => model.MaritalStatus,ViewData["marry"]as List<SelectListItem>)
                </td>
                 <td>
                    @Html.ValidationMessageFor(model => model.MaritalStatus)
                </td>
            </tr>  
              
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.Code)：   
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.Code)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.Code)
                </td>
                 <td class="lab">
                    @Html.LabelFor(model => model.IDnum)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.IDnum)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.IDnum)
                </td>
            </tr>        
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.Tel)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.Tel)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.Tel)
                </td>
                 <td class="lab">
                    @Html.LabelFor(model => model.Department)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.Department)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.Department)
                </td>
            </tr>         
                  
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.Job)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.Job)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.Job)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.Edu)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.Edu)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.Edu)
                </td>
            </tr>        

                
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.School)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.School)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.School)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.Profession)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.Profession)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.Profession)
                </td>
            </tr>         
              
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.CET)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.CET)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.CET)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.NCRE)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.NCRE)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.NCRE)
                </td>
            </tr>        
            
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.OtherCertificate)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.OtherCertificate)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.OtherCertificate)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.Nation)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.Nation)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.Nation)
                </td>
            </tr>         
                 
                   
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.NativePlace)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.NativePlace)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.NativePlace)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.SignCompany)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.SignCompany)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.SignCompany)
                </td>
            </tr>       
                
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.HouseholdRegister)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.HouseholdRegister)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.HouseholdRegister)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.PresentAddress)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.PresentAddress)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.PresentAddress)
                </td>
            </tr>       
              
            <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.EmergencyContactName)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.EmergencyContactName)
                </td>
                 <td>
                    @Html.ValidationMessageFor(model => model.EmergencyContactName)
                </td>
                <td class="lab">
                    @Html.LabelFor(model => model.EmergencyContactTel)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.EmergencyContactTel)
                </td>
                 <td>
                    @Html.ValidationMessageFor(model => model.EmergencyContactTel)
                </td>
            </tr>       
                 
             <tr>
                  <td class="lab">
                    @Html.LabelFor(model => model.DormitoryNum)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.DormitoryNum)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.DormitoryNum)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.HireMaster)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.HireMaster)
                </td>
                 <td>
                    @Html.ValidationMessageFor(model => model.HireMaster)
                </td>
            </tr>       
                

             <tr>
                  <td class="lab">
                    @Html.LabelFor(model => model.Hiredate)：   
                </td>
                <td  class="cont">
                   
                    @Html.TextBoxFor(model => model.Hiredate,new{@class="easyui-datebox"})
                </td>
                 <td>
                    @Html.ValidationMessageFor(model => model.Hiredate)
                </td>
                <td class="lab">
                    @Html.LabelFor(model => model.zhuanzheng_date)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.zhuanzheng_date,new{@class="easyui-datebox"})
                </td>
               <td>
                    @Html.ValidationMessageFor(model => model.zhuanzheng_date)
                </td>
                  
            </tr>       
            <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.ContractFirstStartTime)：
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.ContractFirstStartTime, new { @class = "easyui-datebox" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ContractFirstStartTime)
                </td>
                <td class="lab">
                    @Html.LabelFor(model => model.ContractFirstDeadline)：
                </td>
                <td class="cont">
                    @Html.TextBoxFor(model => model.ContractFirstDeadline, new { @class = "easyui-datebox" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ContractFirstDeadline)
                </td>
            </tr>    
             <tr>
                  <td class="lab">
                    @Html.LabelFor(model => model.ContractSecondDeadline)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.ContractSecondDeadline,new{@class="easyui-datebox"})
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.ContractSecondDeadline)
                </td>
                 <td class="lab">
                     @Html.LabelFor(model => model.ContractThirdDeadline)：
                 </td>
                 <td class="cont">
                     @Html.TextBoxFor(model => model.ContractThirdDeadline, new { @class = "easyui-datebox" })
                 </td>
                 <td>
                     @Html.ValidationMessageFor(model => model.ContractThirdDeadline)
                 </td>
            </tr>       
               
            <tr>
               
                 <td class="lab">
                    @Html.LabelFor(model => model.PaySSDate)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.PaySSDate,new{@class="easyui-datebox"})
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.PaySSDate)
                </td>
            </tr>       
                 
           
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.CupboardNun)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.CupboardNun)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.CupboardNun)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.WorkNum)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.WorkNum)
                </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.WorkNum)
                </td>
            </tr>       
                
             <tr>
                <td class="lab">
                    @Html.LabelFor(model => model.EntryData)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.EntryData)
                    </td>
                  <td>
                    @Html.ValidationMessageFor(model => model.EntryData)
                </td>
                  <td class="lab">
                    @Html.LabelFor(model => model.FixedAssets)：   
                </td>
                <td  class="cont">
                    @Html.TextBoxFor(model => model.FixedAssets)
                    </td>
                 <td>
                    @Html.ValidationMessageFor(model => model.FixedAssets)
                </td>
                 
            </tr>  
            <tr > 
            <td  colspan="4" style="padding-left:20px;">
                     @foreach (var item in ViewBag.entry_data)
                    {
                        <input  name="entry_data" type="checkbox" value="@item.Value" onclick="shuju()" /> @item.Value           

                    }
                    (其他请填写)
                </td>  
               
             
               
                 <td colspan="2" style="padding-left:40px;">
                 @foreach (var item in ViewBag.zichan)
                    {
                        <input  name="zichan" type="checkbox" value="@item.Value" onclick="shuju()" /> @item.Value                

                    }
                    (其他请填写)

                </td>
                
                </tr>  
             

        </tbody>
    </table>
           @Html.HiddenFor(model => model.ID)
}

</div>
<div id="uploadDiv" class="easyui-dialog" closed="true" modal="true" title="上传" style="width:300px; height:200px;" resizable="true" closable="true">
    <iframe scrolling="yes" id='Iframeupload' frameborder="0" src="" style="width:100%;height:98%;"></iframe>
</div>

